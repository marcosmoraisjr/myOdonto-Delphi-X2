unit R_Receituario;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, R_Padrao, Data.DB, Data.Win.ADODB,
  QRCtrls, QuickRpt, Vcl.ExtCtrls, Funcoes, QRPDFFilt;

type
  TfrmRreceituario = class(TfrmRelatorioPadrao)
    QRGroup1: TQRGroup;
    qryAux2: TADOQuery;
    qryRelID_RECEITUARIO: TAutoIncField;
    qryRelID_PACIENTE: TIntegerField;
    qryRelID_MEDICO: TIntegerField;
    qryRelDATA: TDateTimeField;
    qryRelDESCRICAO: TMemoField;
    RelatorioCab: TQuickRep;
    QRBand6: TQRBand;
    QRSysData4: TQRSysData;
    lblRuaCab: TQRLabel;
    lblCidadeCab: TQRLabel;
    QRLabel7: TQRLabel;
    QRLabel9: TQRLabel;
    lblRazaoCab: TQRLabel;
    lblEmpresaCab: TQRLabel;
    LogoEmpresaCAb: TQRImage;
    QRShape3: TQRShape;
    QRBand4: TQRBand;
    mmoDescricao: TQRMemo;
    QRGroup2: TQRGroup;
    lblNomePaciente: TQRLabel;
    QRLabel3: TQRLabel;
    QRBand5: TQRBand;
    QRShape10: TQRShape;
    lblNomeMedicoRodapeCab: TQRLabel;
    lblCRORodapeCab: TQRLabel;
    lblCidadeRodaPECab: TQRLabel;
    QRBand7: TQRBand;
    QRLabel6: TQRLabel;
    QRSysData5: TQRSysData;
    QRSysData6: TQRSysData;
    QRLabel8: TQRLabel;
    QRShape4: TQRShape;
    QRPDFFilter1: TQRPDFFilter;
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    iMedico ,
    iPaciente : Integer;
    Procedure CarregaDadosPaciente;
    Procedure CarregaReceituario(ID : Integer);
  end;

var
  frmRreceituario: TfrmRreceituario;

implementation

{$R *.dfm}


{ TfrmRreceituario }

procedure TfrmRreceituario.CarregaDadosPaciente;
begin
 With qryAux2 do
    Begin
      Close;
      SQL.Clear;
      SQL.Add('SELECT PACIENTE.NOME, PACIENTE.CPF, PACIENTE.RG, PACIENTE.DTANASC, PACIENTE.ENDERECO, PACIENTE.NRO, PACIENTE.BAIRRO, ');
      SQL.Add('PACIENTE.CEP, PACIENTE.TELEFONE, PACIENTE.CELULAR, CIDADE.NOME AS Cidade, CIDADE.UF FROM PACIENTE');
      SQL.Add('INNER JOIN CIDADE ON PACIENTE.ID_CIDADE = CIDADE.ID_CIDADE');
      SQL.Add('WHERE ID_PACIENTE = :pID');
      Parameters.ParamByName('pID').Value := iPaciente;
      Open;

      lblNomePaciente.Caption := FieldByName('NOME').AsString;

      Close;
      SQL.Clear;
      SQL.Add('SELECT NOME, UFCONSELHO, CRO FROM MEDICOS');
      SQL.Add('WHERE ID_MEDICO = :pID');
      Parameters.ParamByName('pID').Value := iMedico;
      Open;

      lblNomeMedicoRodapeCab.Caption := FieldByName('NOME').AsString;
      lblCRORodapeCab.Caption := 'CRO '+ FieldByName('UFCONSELHO').AsString + ' : ' + FieldByName('CRO').AsString;
    End;
end;

procedure TfrmRreceituario.CarregaReceituario(ID: Integer);
begin
  With qryRel do
    Begin
      CLose;
      SQL.Clear;
      SQL.Add('SELECT * FROM RECEITUARIO');
      SQL.Add('WHERE ID_RECEITUARIO = :pID');
      Parameters.ParamByName('pID').Value := ID;
      Open;


      lblCidadeRodaPECab.Caption := FormatDateTime('dddddd', FieldByName('DATA').AsDateTime);
    End;
end;

procedure TfrmRreceituario.FormCreate(Sender: TObject);
begin
  if FileExists(PastaArquivo+'\Logo.Jpg') then
    Begin
      LogoEmpresaCAb.Picture.LoadFromFile(PastaArquivo+'\Logo.jpg');
    End;

  With qryAux do
    Begin
      Close;
      SQL.Clear;
      SQL.Add('SELECT EMPRESA.NOME, EMPRESA.RAZAOSOCIAL, EMPRESA.ENDERECO, EMPRESA.NUMERO, EMPRESA.BAIRRO, EMPRESA.CEP, ');
      SQL.Add('EMPRESA.TELEFONE, EMPRESA.FAX, EMPRESA.CONTATO, EMPRESA.CNPJ, EMPRESA.IE, EMPRESA.EMAIL, CIDADE.NOME AS CIDADE, CIDADE.UF FROM EMPRESA');
      SQL.Add('INNER JOIN CIDADE ON EMPRESA.ID_CIDADE = CIDADE.ID_CIDADE');
      SQL.Add('WHERE ID_EMPRESA = 1');
      Open;

      lblEmpresaCab.Caption := FieldByName('NOME').AsString;
      lblRazaoCab.Caption := FieldByName('RAZAOSOCIAL').AsString;
      lblRuaCab.Caption := FieldByName('ENDERECO').AsString + ', ' + FieldByName('Numero').AsString + ' - ' + FieldByName('BAIRRO').AsString;
      lblCidadeCab.Caption := FieldByName('CIDADE').AsString + ' - ' + FieldByName('UF').AsString + ' - CEP: ' + FieldByName('CEP').AsString;
    End;
end;

end.
