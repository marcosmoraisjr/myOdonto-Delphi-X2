unit F_TransferenciaSaldos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Funcoes, Padrao, Data.DB,
  Data.Win.ADODB, JvComponentBase, JvEnterTab, Vcl.ComCtrls, Vcl.ExtCtrls,
  cxGraphics, cxControls, cxLookAndFeels, cxLookAndFeelPainters, cxContainer,
  cxEdit, dxSkinsCore, dxSkinsDefaultPainters, cxTextEdit, cxCurrencyEdit,
  Vcl.StdCtrls, Vcl.Buttons;

type
  TfrmTransferenciaSaldos = class(TfrmPadrao)
    qryAux: TADOQuery;
    GroupBox1: TGroupBox;
    Label1: TLabel;
    cmbContaOrigem: TComboBox;
    Label2: TLabel;
    Label3: TLabel;
    cmbContaDestino: TComboBox;
    EdtValorSaldo: TcxCurrencyEdit;
    Label4: TLabel;
    EdtValor: TcxCurrencyEdit;
    btnFechar: TSpeedButton;
    btnSalvar: TSpeedButton;
    procedure btnFecharClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure cmbContaOrigemClick(Sender: TObject);
  private
    { Private declarations }
    Procedure MontaCombos;
    Function RetornaIDBanco(Descricao : String) : Integer;
  public
    { Public declarations }
  end;

var
  frmTransferenciaSaldos: TfrmTransferenciaSaldos;

implementation

{$R *.dfm}

procedure TfrmTransferenciaSaldos.btnFecharClick(Sender: TObject);
begin
  inherited;
  Close;
end;

procedure TfrmTransferenciaSaldos.cmbContaOrigemClick(Sender: TObject);
var
  iIDConta : Integer;
begin
  inherited;
  if cmbContaOrigem.ItemIndex = 0 then
    Begin
      With qryAux do
        Begin
          Close;
          SQL.Clear;
          SQL.Add('SELECT SUM(VLRENTRADA - VLRSAIDA) AS SALDO FROM SALDOCAIXA');
          Open;

          EdtValorSaldo.Value := FieldByName('SALDO').AsFloat;
        End;
    End
  Else
    Begin
      iIDConta := RetornaIDBanco(cmbContaOrigem.Text);
      With qryAux do
        Begin
          Close;
          SQL.Clear;
          SQL.Add('SELECT SUM(VLRENTRADA - VLRSAIDA) AS SALDO FROM SALDOCONTASBANCARIAS');
          SQL.Add('WHERE ID_CONTASBANCARIAS = :pID');
          Parameters.ParamByName('pID').Value := iIDConta;
          Open;

          EdtValorSaldo.Value := FieldByName('SALDO').AsFloat;
        End;
    End;
end;

procedure TfrmTransferenciaSaldos.FormCreate(Sender: TObject);
begin
  inherited;
  MontaCombos;
end;

procedure TfrmTransferenciaSaldos.MontaCombos;
begin
  cmbContaOrigem.Items.Clear;
  cmbContaDestino.Items.Clear;

  cmbContaOrigem.Items.Add('Caixa GERAL');
  cmbContaDestino.Items.Add('Caixa GERAL');

  With qryAux do
    Begin
      Close;
      SQL.Clear;
      SQL.Add('SELECT * FROM CONTASBANCARIAS');
      SQL.Add('WHERE ATIVO = 1');
      SQL.Add('AND ID_FILIAL = :pFilial');
      Parameters.ParamByName('pFilial').Value := Empresa.ID;
      Open;

      while not eof do
        Begin
          cmbContaOrigem.Items.Add(FieldByName('DESCRICAO').AsString);
          cmbContaDestino.Items.Add(FieldByName('DESCRICAO').AsString);
          Next;
        End;

        cmbContaOrigem.ItemIndex := 0;
        cmbContaDestino.ItemIndex := 1;
    End;
end;

function TfrmTransferenciaSaldos.RetornaIDBanco(Descricao: String): Integer;
begin
  With qryAux do
    Begin
      Close;
      SQL.Clear;
      SQL.Add('SELECT ID_CONTASBANCARIAS FROM CONTASBANCARIAS');
      SQL.Add('WHERE ATIVO = 1');
      SQL.Add('AND ID_FILIAL = :pFilial');
      SQL.Add('AND DESCRICAO = :pDesc');
      Parameters.ParamByName('pFilial').Value := Empresa.ID;
      Parameters.ParamByName('pDesc').Value := Descricao;
      Open;

      Result := FieldByName('ID_CONTASBANCARIAS').AsInteger;
    End;
end;

end.
